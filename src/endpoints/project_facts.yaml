paths:
  collection:
    get:
      description: Retrieve the current facts for a project
      summary: Get Facts
      tags: [Project Facts]
      responses:
        '200':
          description: Success
          content:
            application/json: &responseContent
              schema:
                type: array
                items:
                  $ref: '../schemas/project_fact.yaml#/read'
              examples:
                facts:
                  $ref: '#/components/examples/read'
            application/msgpack:
              <<: *responseContent
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
    post:
      summary: Set Facts
      description: Set one or more project facts
      requestBody:
        content:
          application/json: &postContent
            schema:
              type: array
              items:
                $ref: '../schemas/project_fact.yaml#/write'
            examples:
              facts:
                $ref: '#/components/examples/write'
          application/msgpack:
            <<: *postContent
      tags: [Project Facts]
      responses:
        '200':
          description: The request to record the project fact was successful
          content:
            application/json: &responsesSuccess
              schema:
                $ref: '../schemas/project_fact_type.yaml#/read'
              examples:
                record:
                  $ref: '#/components/examples/read'
            application/msgpack:
              <<: *responsesSuccess
        '400': { $ref: '../components/responses.yaml#/RequestError' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '409': { $ref: '../components/responses.yaml#/Conflict' }
    parameters:
      - name: id
        in: path
        description: Project ID
        required: true
        schema:
          type: integer

components:
  examples:
    read:
      summary: All the current facts for a project
      value:
        - fact_type_id: 1
          fact_name: Programming Language
          recorded_at: 2021-03-01T12:00:00Z
          recorded_by: test_user
          value: Python 3.9
          score: 100
          weight: 25
        - fact_type_id: 2
          fact_name: Test Coverage
          recorded_at: 2021-03-01T12:00:01Z
          recorded_by: test_user
          value: 95.6
          score: 100
          weight: 15
    write:
      summary: A payload example for setting multiple project facts
      value:
        - fact_type_id: 1
          value: Python 3.9
        - fact_type_id: 2
          value: 96.5
