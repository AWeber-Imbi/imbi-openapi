paths:
  collection:
    get:
      description: Retrieve the collection of environments
      summary: Get Collection
      tags: [Environments]
      responses:
        '200':
          description: Success
          headers:
            Cache-Control: { $ref: '../components/headers.yaml#/Cache-Control' }
          content:
            application/json: &responseContent
              schema:
                type: array
                items:
                  $ref: '../schemas/environment.yaml'
              examples:
                records:
                  summary: Multiple environment records
                  value:
                    - name: testing
                      description: |
                        The testing environment reflects the state of HEAD state of the
                        master branch in our Git Repositories for all projects
                      icon_class: fab fa-aws
                    - name: staging
                      description: |
                        The staging environment reflects tagged project releases that are
                        intended to be to deployed to production
                      icon_class: fab fa-aws
            application/msgpack:
              <<: *responseContent
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
    post:
      summary: Create Record
      description: Create a new environment record
      requestBody:
        description: The environment record to create
        content:
          application/json: &postContent
            schema:
              $ref: '../schemas/environment.yaml'
            examples:
              record:
                $ref: '#/components/examples/record'
          application/msgpack:
            <<: *postContent
      tags: [Environments]
      responses:
        '200': { $ref: '#/components/responses/Success' }
        '400': { $ref: '../components/responses.yaml#/RequestError' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '409': { $ref: '../components/responses.yaml#/Conflict' }

  manage:
    get:
      summary: Get Record
      description: Retrieve an environment record
      tags: [Environments]
      responses:
        '200': { $ref: '#/components/responses/Success' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
    patch:
      summary: Update Record
      description: >-
        Update an environment, providing a JSON Patch (RFC-6209) payload of update
        operations to apply.
      tags: [Environments]
      requestBody:
        description: JSON Patch Payload
        content:
          application/json: &patchContent
            schema:
              $ref: '../components/schemas.yaml#/jsonPatch'
          application/msgpack:
            <<: *patchContent
          application/json-patch+json:
            <<: *patchContent
          application/json-patch+msgpack:
            <<: *patchContent
      responses:
        '200': { $ref: '#/components/responses/Success' }
        '304': { $ref: '../components/responses.yaml#/NoChanges' }
        '400': { $ref: '../components/responses.yaml#/RequestError' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
        '409': { $ref: '../components/responses.yaml#/Conflict' }
    delete:
      summary: Delete Record
      description: Remove an environment record
      tags: [Environments]
      responses:
        '204': { $ref: '../components/responses.yaml#/RecordRemoved' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
    parameters:
      - name: name
        in: path
        description: Environment Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'

components:
  examples:
    record:
      summary: A full environment record
      value:
        name: testing
        description: |
          The testing environment reflects the state of HEAD state of the
          master branch in our Git Repositories for all projects
        icon_class: fab fa-aws

  responses:
    Success:
      description: The request to create, update, or retrieve the environment was successful
      headers:
        Cache-Control: { $ref: '../components/headers.yaml#/Cache-Control' }
        Last-Modified: { $ref: '../components/headers.yaml#/Last-Modified' }
        Link: { $ref: '../components/headers.yaml#/Link' }
      content:
        application/json: &responsesSuccess
          schema:
            $ref: '../schemas/environment.yaml'
          examples:
            record:
              $ref: '#/components/examples/record'
        application/msgpack:
          <<: *responsesSuccess
