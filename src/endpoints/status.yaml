paths:
  status:
    get:
      security: []
      description: |-
        Returns status / health information about the running service.
      summary: Service Status
      operationId: status
      tags:
        - Monitoring & Metrics
      responses:
        '200':
          description: Service Available
          content:
            application/json: &statusAvailable
              schema:
                $ref: '#/components/schemas/status'
              example:
                $ref: '#/components/examples/statusOk/value'
            application/msgpack:
              <<: *statusAvailable
        '503':
          description: Service Unavailable
          content:
            application/json: &statusUnavailable
              schema:
                $ref: '#/components/schemas/status'
              example:
                $ref: '#/components/examples/statusError/value'
            application/msgpack:
              <<: *statusUnavailable

components:
  examples:
    statusOk:
      summary: Example when the service is available and processing requests
      value: &exampleStatus
        started_at: 2020-01-01T00:00:00+00:00
        status: ok
        system:
          language:
            name: python
            implementation: CPython
            version: 3.7.6
          os:
            name: Alpine Linux
            version: 3.11.6
        version: '{{ settings["version"] }}'
    statusError:
      summary: Example when the service is unavailable
      value:
        <<: *exampleStatus
        status: unavailable

  schemas:
    status:
      type: object
      properties:
        started_at:
          type: string
          format: iso8601-timestamp
          description: The ISO-8601 formatted timestamp of when the service started
        status:
          type: string
          description: The current application status
          enum:
            - ok
            - maintenance
        version:
          type: string
          description: The version
