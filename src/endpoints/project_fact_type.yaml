paths:
  collection:
    get:
      description: Retrieve the collection of project fact types
      summary: Get Collection
      tags: [Fact Types]
      responses:
        '200':
          description: Success
          headers:
            Cache-Control: { $ref: '../components/headers.yaml#/Cache-Control' }
          content:
            application/json: &responseContent
              schema:
                type: array
                items:
                  $ref: '../schemas/project_fact_type.yaml#/read'
              examples:
                records:
                  summary: Multiple project fact type records
                  value:
                    - id: 1
                      project_type_id: [1, 2, 3, 4, 5, 6, 7]
                      name: Programming Language
                      fact_type: enum
                      description: ~
                      ui_options: []
                      weight: 25
                    - id: 2
                      project_type_id: [1, 2, 3, 4, 5]
                      name: Test Coverage
                      data_type: boolean
                      fact_type: range
                      description: ~
                      ui_options: []
                      weight: 25
                    - id: 3
                      project_type_id: [1, 2, 3]
                      name: Deployed to all Environments
                      fact_type: enum
                      data_type: boolean
                      description: ~
                      ui_options: []
                      weight: 20
                    - id: 4
                      project_type_id: [1, 2]
                      name: Has Acceptance Tests
                      fact_type: enum
                      data_type: boolean
                      description: ~
                      ui_options: []
                      weight: 10
                    - id: 5
                      project_type_id: [1, 2]
                      name: Meets Current Standards
                      fact_type: enum
                      data_type: boolean
                      description: ~
                      ui_options: []
                      weight: 10
                    - id: 6
                      project_type_ids: [1, 2]
                      name: Has working CI pipeline
                      fact_type: enum
                      data_type: boolean
                      description: ~
                      ui_options: []
                      weight: 10
            application/msgpack:
              <<: *responseContent
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
    post:
      summary: Create Record
      description: Create a new project fact type record
      requestBody:
        description: The project fact type record to create
        content:
          application/json: &postContent
            schema:
              $ref: '../schemas/project_fact_type.yaml#/write'
            examples:
              record:
                $ref: '#/components/examples/write'
          application/msgpack:
            <<: *postContent
      tags: [Fact Types]
      responses:
        '200': { $ref: '#/components/responses/Success' }
        '400': { $ref: '../components/responses.yaml#/RequestError' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '409': { $ref: '../components/responses.yaml#/Conflict' }

  manage:
    get:
      summary: Get Record
      description: Retrieve a project fact type record
      tags: [Fact Types]
      responses:
        '200': { $ref: '#/components/responses/Success' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
    patch:
      summary: Update Record
      description: >-
        Update a project fact type, providing a JSON Patch (RFC-6209) payload of update
        operations to apply.
      tags: [Fact Types]
      requestBody:
        description: JSON Patch Payload
        content:
          application/json: &patchContent
            schema:
              $ref: '../components/schemas.yaml#/jsonPatch'
          application/msgpack:
            <<: *patchContent
          application/json-patch+json:
            <<: *patchContent
          application/json-patch+msgpack:
            <<: *patchContent
      responses:
        '200': { $ref: '#/components/responses/Success' }
        '304': { $ref: '../components/responses.yaml#/NoChanges' }
        '400': { $ref: '../components/responses.yaml#/RequestError' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
        '409': { $ref: '../components/responses.yaml#/Conflict' }
    delete:
      summary: Delete Record
      description: Remove a project fact type record
      tags: [Fact Types]
      responses:
        '204': { $ref: '../components/responses.yaml#/RecordRemoved' }
        '401': { $ref: '../components/responses.yaml#/Unauthorized' }
        '404': { $ref: '../components/responses.yaml#/NotFound' }
    parameters:
      - name: fact_type_id
        in: path
        description: Fact Type ID
        required: true
        schema:
          type: number

components:
  examples:
    read:
      summary: A full project fact type record
      value:
        id: 1
        created_by: test_user
        last_modified_by: ~
        project_type_ids: [1]
        name: Programming Language
        fact_type: enum
        data_type: boolean
        description: The programming language used in the project
        ui_options: []
        weight: 25
    write:
      summary: A full project fact type record
      value:
        project_type_ids: [1]
        name: Programming Language
        fact_type: enum
        data_type: boolean
        description: The programming language used in the project
        ui_options: []
        weight: 25

  responses:
    Success:
      description: The request to create, update, or retrieve the project fact type was successful
      headers:
        Cache-Control: { $ref: '../components/headers.yaml#/Cache-Control' }
        Last-Modified: { $ref: '../components/headers.yaml#/Last-Modified' }
        Link: { $ref: '../components/headers.yaml#/Link' }
      content:
        application/json: &componentResponsesSuccess
          schema:
            $ref: '../schemas/project_fact_type.yaml#/read'
          examples:
            record:
              $ref: '#/components/examples/read'
        application/msgpack:
          <<: *componentResponsesSuccess
